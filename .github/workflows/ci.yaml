name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main

env: 
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  ci:
    permissions:
      contents: none
    name: CI
    needs: [test, docs]
    runs-on: ubuntu-latest
    if: 'always()'
    steps:
      - name: Failed
        run: exit 1
        if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')"
  test:
    name: Test
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        rust: ["stable"]
    runs-on: ${{matrix.os}}
    continue-on-error: ${{matrix.rust != 'stable'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-hack
      - name: test
        run: cargo hack test
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Build document
        run: cargo doc --all-features